/**
* DigitalRooster
* Open API for Digital Rooster
*
* The version of the OpenAPI document: 0.8.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

#include "AlarmsApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

AlarmsApiImpl::AlarmsApiImpl(std::shared_ptr<Pistache::Rest::Router> rtr)
    : AlarmsApi(rtr)
    { }

void AlarmsApiImpl::alarms_create(const Alarm &alarm, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void AlarmsApiImpl::alarms_delete(const std::string &uid, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void AlarmsApiImpl::alarms_read_all(const Pistache::Optional<int32_t> &length, const Pistache::Optional<int32_t> &offset, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void AlarmsApiImpl::alarms_read_one(const std::string &uid, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void AlarmsApiImpl::alarms_update_one(const std::string &uid, const Alarm &alarm, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

}
}
}
}

