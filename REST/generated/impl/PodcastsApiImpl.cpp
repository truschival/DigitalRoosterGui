/**
* DigitalRooster
* Open API for Digital Rooster
*
* The version of the OpenAPI document: 0.8.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/

#include "PodcastsApiImpl.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

PodcastsApiImpl::PodcastsApiImpl(std::shared_ptr<Pistache::Rest::Router> rtr)
    : PodcastsApi(rtr)
    { }

void PodcastsApiImpl::podcasts_create(const Podcast &podcast, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void PodcastsApiImpl::podcasts_delete(const std::string &uid, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void PodcastsApiImpl::podcasts_read_all(const Pistache::Optional<int32_t> &length, const Pistache::Optional<int32_t> &offset, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void PodcastsApiImpl::podcasts_read_one(const std::string &uid, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}
void PodcastsApiImpl::podcasts_update_one(const std::string &uid, const Podcast &podcast, Pistache::Http::ResponseWriter &response) {
    response.send(Pistache::Http::Code::Ok, "Do some magic\n");
}

}
}
}
}

