/**
* DigitalRooster
* Open API for Digital Rooster
*
* The version of the OpenAPI document: 0.8.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Station.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

Station::Station()
{
    m_Uid = "";
    m_UidIsSet = false;
    m_Name = "";
    m_Url = "";
    
}

Station::~Station()
{
}

void Station::validate()
{
    // TODO: implement validation
}

void to_json(nlohmann::json& j, const Station& o)
{
    j = nlohmann::json();
    if(o.uidIsSet())
        j["uid"] = o.m_Uid;
    j["name"] = o.m_Name;
    j["url"] = o.m_Url;
}

void from_json(const nlohmann::json& j, Station& o)
{
    if(j.find("uid") != j.end())
    {
        j.at("uid").get_to(o.m_Uid);
        o.m_UidIsSet = true;
    } 
    j.at("name").get_to(o.m_Name);
    j.at("url").get_to(o.m_Url);
}

std::string Station::getUid() const
{
    return m_Uid;
}
void Station::setUid(std::string const& value)
{
    m_Uid = value;
    m_UidIsSet = true;
}
bool Station::uidIsSet() const
{
    return m_UidIsSet;
}
void Station::unsetUid()
{
    m_UidIsSet = false;
}
std::string Station::getName() const
{
    return m_Name;
}
void Station::setName(std::string const& value)
{
    m_Name = value;
}
std::string Station::getUrl() const
{
    return m_Url;
}
void Station::setUrl(std::string const& value)
{
    m_Url = value;
}

}
}
}
}

